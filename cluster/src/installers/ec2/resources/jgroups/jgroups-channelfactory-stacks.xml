<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE protocol_stacks [
   <!ENTITY shared-tcp '
		<!--  TCP transport config meant to be shared between different channels
		      with different requirements. Message bundling is disabled in this 
		      general-purpose config as it can add latency to synchronous RPCs. -->
		
            <TCP
                 singleton_name="tcp"
                 start_port="${jboss.jgroups.tcp.tcp_port:7600}"
                 tcp_nodelay="true"
                 loopback="true"
                 recv_buf_size="20000000"
                 send_buf_size="640000"
                 discard_incompatible_packets="true"
                 max_bundle_size="64000"
                 max_bundle_timeout="30"
                 use_incoming_packet_handler="true"
                 enable_bundling="false"
                 use_send_queues="false"
                 sock_conn_timeout="300"
                 skip_suspected_members="true"
                 timer.num_threads="12"
                 enable_diagnostics="${jboss.jgroups.enable_diagnostics:true}"
                 diagnostics_addr="${jboss.jgroups.diagnostics_addr:224.0.75.75}"
                 diagnostics_port="${jboss.jgroups.diagnostics_port:7500}"
   
                 thread_pool.enabled="true"
                 thread_pool.min_threads="20"
                 thread_pool.max_threads="200"
                 thread_pool.keep_alive_time="5000"
                 thread_pool.queue_enabled="true"
                 thread_pool.queue_max_size="1000"
                 thread_pool.rejection_policy="discard"
      
                 oob_thread_pool.enabled="true"
                 oob_thread_pool.min_threads="20"
                 oob_thread_pool.max_threads="200"
                 oob_thread_pool.keep_alive_time="1000"
                 oob_thread_pool.queue_enabled="false"
                 oob_thread_pool.rejection_policy="discard"/>
		'>
]>


<!--
  Standard JGroups protocol stacks definitions, used by the JChannelFactory bean.
  
  Author: Bela Ban, Brian Stansberry
  Version: $Id:jgroups-channelfactory-stacks.xml 71313 2008-03-26 19:46:59Z bstansberry@jboss.com $
-->
<protocol_stacks>

    <stack name="tcp"
           description="TCP based stack, with flow control and message bundling. 
                        TCP stacks are usually used when IP multicasting cannot 
                        be used in a network, e.g. because it is disabled (e.g. 
                        routers discard multicast)">
        <config>
            &shared-tcp;
            <S3_PING access_key="${jboss.jgroups.s3_ping.access_key:}" secret_access_key="${jboss.jgroups.s3_ping.secret_access_key:}" location="${jboss.jgroups.s3_ping.bucket:}" />
            <MERGE2 max_interval="100000" min_interval="20000"/>
            <FD_SOCK start_port="${jboss.jgroups.tcp.fd_sock_port:57600}"/>
            <FD timeout="6000" max_tries="5" shun="true"/>
            <VERIFY_SUSPECT timeout="1500"/>
            <BARRIER/>
            <pbcast.NAKACK use_mcast_xmit="false" gc_lag="0"
                           retransmit_timeout="300,600,1200,2400,4800"
                           discard_delivered_msgs="true"/>
            <UNICAST timeout="300,600,1200,2400,3600"/>
            <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000"
                           max_bytes="400000"/>            
            <VIEW_SYNC avg_send_interval="10000"/>               
            <pbcast.GMS print_local_addr="true" join_timeout="3000"
                        shun="true"
                        view_bundling="true"
                        view_ack_collection_timeout="5000"
                        resume_task_timeout="7500"/>
            <FC max_credits="2000000" min_threshold="0.10" 
                ignore_synchronous_response="true"/>
            <FRAG2 frag_size="60000"/>
            <!-- pbcast.STREAMING_STATE_TRANSFER/ -->
            <pbcast.STATE_TRANSFER/>
            <pbcast.FLUSH timeout="0" start_flush_timeout="10000"/>
        </config>
    </stack>


    <stack name="tcp-sync"
           description="TCP based stack, without flow control and without 
                        message bundling. TCP stacks are usually used when IP 
                        multicasting cannot be used in a network (e.g.routers 
                        discard multicast). This configuration should be used 
                        instead of 'tcp' above when (1) synchronous calls are 
                        used and (2) the message volume (rate and size) is not 
                        that large.">
        <config>
            <TCP
                 singleton_name="tcp_sync"
                 start_port="${jboss.jgroups.tcp_sync.tcp_port:7650}"
                 tcp_nodelay="true"
                 loopback="true"
                 recv_buf_size="20000000"
                 send_buf_size="640000"
                 discard_incompatible_packets="true"
                 enable_bundling="false"
                 use_send_queues="false"
                 sock_conn_timeout="300"
                 skip_suspected_members="true"
                 enable_diagnostics="${jboss.jgroups.enable_diagnostics:true}"
                 diagnostics_addr="${jboss.jgroups.diagnostics_addr:224.0.75.75}"
                 diagnostics_port="${jboss.jgroups.diagnostics_port:7500}"
                 
                 thread_pool.enabled="true"
                 thread_pool.min_threads="8"
                 thread_pool.max_threads="200"
                 thread_pool.keep_alive_time="5000"
                 thread_pool.queue_enabled="true"
                 thread_pool.queue_max_size="1000"
                 thread_pool.rejection_policy="discard"
      
                 oob_thread_pool.enabled="true"
                 oob_thread_pool.min_threads="20"
                 oob_thread_pool.max_threads="200"
                 oob_thread_pool.keep_alive_time="1000"
                 oob_thread_pool.queue_enabled="false"
                 oob_thread_pool.rejection_policy="discard"/>
            <S3_PING access_key="${jboss.jgroups.s3_ping.access_key:}" secret_access_key="${jboss.jgroups.s3_ping.secret_access_key:}" location="${jboss.jgroups.s3_ping.bucket:}" />
            <MERGE2 max_interval="100000" min_interval="20000"/>
            <FD_SOCK start_port="${jboss.jgroups.tcp_sync.fd_sock_port:57650}"/>
            <FD timeout="6000" max_tries="5" shun="true"/>
            <VERIFY_SUSPECT timeout="1500"/>
            <BARRIER/>
            <pbcast.NAKACK use_mcast_xmit="false" gc_lag="0"
                           retransmit_timeout="300,600,1200,2400,4800"
                           discard_delivered_msgs="true"/>
            <UNICAST timeout="300,600,1200,2400,3600"/>
            <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000"
                           max_bytes="400000"/>            
            <VIEW_SYNC avg_send_interval="10000"/>
            <pbcast.GMS print_local_addr="true" join_timeout="3000"
                        shun="true"
                        view_bundling="true"
                        view_ack_collection_timeout="5000"
                        resume_task_timeout="7500"/>
            <!-- pbcast.STREAMING_STATE_TRANSFER/ -->
            <pbcast.STATE_TRANSFER/>
            <pbcast.FLUSH timeout="0" start_flush_timeout="10000"/>
        </config>
    </stack>
    
    <stack name="jbm-control"
           description="Stack optimized for the JBoss Messaging Control Channel">
       <config>
            <!-- By default we use the same TCP transport protocol config as is 
                 used for the default 'tcp' stack defined above. This allows
                 the JBoss Messaging Control Channel to use the same sockets,
                 network buffers and thread pools as are used by the other
                 standard JBoss AS clustered services.
                
                 The TCP config is included via an XML entity to ensure that
                 it remains consistent between this stack and the 'tcp' 
                 stack above.
            -->
            &shared-tcp;
            <S3_PING access_key="${jboss.jgroups.s3_ping.access_key:}" secret_access_key="${jboss.jgroups.s3_ping.secret_access_key:}" location="${jboss.jgroups.s3_ping.bucket:}" />
            <MERGE2 max_interval="100000"
                    min_interval="20000"/>
            <FD_SOCK start_port="${jboss.jgroups.jbm_control.fd_sock_port:53200}"/>
            <FD timeout="6000" max_tries="5" shun="true"/>
            <VERIFY_SUSPECT timeout="1500" />
            <BARRIER />
            <pbcast.NAKACK use_stats_for_retransmission="false"
                   exponential_backoff="150"
                   use_mcast_xmit="true" gc_lag="0"
                   retransmit_timeout="50,300,600,1200"
                   discard_delivered_msgs="true"/>
            <UNICAST timeout="300,600,1200,2400,3600"/>
            <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000"
                           max_bytes="400000"/>
            <VIEW_SYNC avg_send_interval="10000"/>
            <pbcast.GMS print_local_addr="true" join_timeout="3000"
                shun="true"
                view_bundling="true"/>
            <FC max_credits="500000" min_threshold="0.20" 
                ignore_synchronous_response="true"/>
            <FRAG2 frag_size="60000"  />
            <pbcast.STATE_TRANSFER/>
            <pbcast.FLUSH timeout="20000" start_flush_timeout="10000"/>
        </config>
    </stack>
    
    
    <stack name="jbm-data"
           description="Stack optimized for the JBoss Messaging Data Channel">
        <config>
            <TCP singleton_name="jbm-data"
                 start_port="${jboss.messaging.datachanneltcpport:7900}"
                 loopback="true"
                 recv_buf_size="20000000"
                 send_buf_size="640000"
                 discard_incompatible_packets="true"
                 enable_bundling="false"
                 use_send_queues="false"
                 sock_conn_timeout="300"
                 skip_suspected_members="true"
                 enable_diagnostics="${jboss.jgroups.enable_diagnostics:true}"
                 diagnostics_addr="${jboss.jgroups.diagnostics_addr:224.0.75.75}"
                 diagnostics_port="${jboss.jgroups.diagnostics_port:7500}"
                 
                 thread_pool.enabled="true"
                 thread_pool.min_threads="8"
                 thread_pool.max_threads="200"
                 thread_pool.keep_alive_time="5000"
                 thread_pool.queue_enabled="true" 
                 thread_pool.queue_max_size="500"
                 thread_pool.rejection_policy="discard"
                 
                 oob_thread_pool.enabled="true"
                 oob_thread_pool.min_threads="1"
                 oob_thread_pool.max_threads="100" 
                 oob_thread_pool.keep_alive_time="5000"
                 oob_thread_pool.queue_enabled="false"
                 oob_thread_pool.rejection_policy="discard"/>
            <S3_PING access_key="${jboss.jgroups.s3_ping.access_key:}" secret_access_key="${jboss.jgroups.s3_ping.secret_access_key:}" location="${jboss.jgroups.s3_ping.bucket:}" />
            <MERGE2 max_interval="100000" min_interval="20000"/>
            <FD_SOCK start_port="${jboss.jgroups.jbm_data.fd_sock_port:57900}"/>
            <FD timeout="6000" max_tries="5" shun="true"/>
            <VERIFY_SUSPECT timeout="1500"/>
            <BARRIER/>
            <pbcast.NAKACK use_mcast_xmit="false" gc_lag="0"
                           retransmit_timeout="300,600,1200,2400,4800"
                           discard_delivered_msgs="true"/>
            <UNICAST timeout="300,600,1200,2400,3600"/>
            <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000"
                           max_bytes="400000"/>
            <VIEW_SYNC avg_send_interval="10000"/>

            <pbcast.GMS print_local_addr="true" join_timeout="3000"
                shun="true" view_bundling="true"/>
        </config>
    </stack>

</protocol_stacks>


